<ROSETTASCRIPTS>

  <SCOREFXNS>
    # Centroid-level score function is used to score after NubInitio and in case chainbreak closure is needed.
    <ScoreFunction name="centroid" weights="cen_std" patch="score4L" />
    # Full Atom-level score function is used to repack disulfides in NubInitio and guide FastDesign.
    <ScoreFunction name="fullatom" weights="talaris2014" >
      <Reweight scoretype="chainbreak" weight="1.0"/>
      <Reweight scoretype="linear_chainbreak" weight="1.0"/>
      <Reweight scoretype="overlap_chainbreak" weight="1.0"/>
    </ScoreFunction>
  </SCOREFXNS>

  <RESIDUE_SELECTORS>
    <xi:include href="xml_pieces/selectors.xml" />    # Standard FFL ResidueSelectors.
    # Template Scaffold Selectors
    <Chain name="chA" chains="A" />                   # Template Chain (there can only be one!).
                                                      # Here it dubs as design chain too.
    <Not name="!chA" selector="chA" />
    <And name="chAprot" selectors="PROTEIN,chA" />    # This is an extra necessity as there is a
    <Not name="!chAprot" selector="chAprot" />        # non-peptide residue that won't work for us.

    # Template Scaffold AND Motif Selectors (insertion over itself)
    <Index name="motif1" resnums="54A-58A" />
    <Index name="motif2" resnums="62A-68A" />
    <Index name="motif3" resnums="112A-115A" />
    <Index name="motif4" resnums="123A-126A" />
    <Or name="insertion" selectors="motif1,motif2,motif3,motif4" />
  </RESIDUE_SELECTORS>

  <MOVE_MAP_FACTORIES>
    <xi:include href="xml_pieces/movemap.xml" />      # Standard FFL MoveMap
  </MOVE_MAP_FACTORIES>

  <TASKOPERATIONS>
    <xi:include href="xml_pieces/taskoperators.xml" /># Standard FFL TaskOperators
  </TASKOPERATIONS>

  <FILTERS>
    # We will check at the end the final RMSD between the template and the Design
    # Nothing comming out of the NubInitioMover will have non-peptide residues,
    # so the chAprot selector is not necessary for it (not decrimental, either).
    <RmsdFromResidueSelectorFilter name="final_rmsd" confidence="0"
        reference_name="template_pose" reference_selector="chAprot"
        query_selector="chA" />
  </FILTERS>

  <MOVERS>
    # We will save the template, as it is also our target, here.
    <SavePoseMover name="saveTemplate" restore_pose="0" reference_name="template_pose" />
    # This is one of the alternatives to load the target motif's pdb file.
    <SavePoseMover name="load_target" reference_name="target_pose" pdb_file="4zqk.pdb.gz" />
    # Both to create the fragments needed for NubInitio as well as for the NubInitio itself,
    # only one-chain templates can be considered, so we'll need to delete the rest.
    <DeleteRegionMover name="removeNonProtein" residue_selector="!PROTEIN" />
    <DeleteRegionMover name="removeExtraChains" residue_selector="!chA" />
    # The creates the fragments (if they need to be created) or loads them from a file
    # into the DataMap with the "frags" identifier (that needs to be specified in the NubInitio).
    <StructFragmentMover name="FragmentPicker" prefix="frags"
      vall_file="database/vall.jul19.2011.gz" output_frag_files="1"
      small_frag_file="frags.200.3mers" large_frag_file="frags.200.9mers" />
    # Constraints have to be used to guide the ab initio folding.
    <AddConstraints name="addCST" >
      <AtomPairConstraintGenerator name="atompairCST" sd="5.0" ca_only="true"
        use_harmonic="true" unweighted="true" min_seq_sep="6" max_distance="40" residue_selector="chAprot" />
    </AddConstraints>
    <ClearConstraintsMover name="cleanCST" />
    # The NubInitio folding is done here.
    <NubInitioMover name="FFL" fragments_id="frags" template_motif_selector="insertion" use_cst="true"
      rmsd_threshold="5" fullatom_scorefxn="fullatom" >
      <Nub reference_name="target_pose" residue_selector="insertion" >
        <Segment order="1" c_term_flex="2" />
        <Segment order="2" n_term_flex="2" />
        <Segment order="3" />
        <Segment order="4" />
      </Nub>
    </NubInitioMover>
    <NubInitioLoopClosureMover name="FFLCCD" fragments_id="frags" break_side_ramp="true" />

    <DumpPdb name="dump" fname="prostFFL_pose.pdb" />

    # Edit the sequence to stabilize the protein
    <FastDesign name="DesignRelax" scorefxn="fullatom"
               task_operations="FFLMOTIF_TASKOP,FFLTEMPLATE_TASKOP,FFLTEMPLATE_DISULFIDES"
               repeats="1" delete_virtual_residues_after_FastRelax="true"
               movemap_factory="FFLSTANDARD_MOVEMAP" >
    </FastDesign>

    <ResidueLabelsToPymolSelectionMover name="pymolselect"  pdb_count="true" />

  </MOVERS>
  <APPLY_TO_POSE>
  </APPLY_TO_POSE>
  <PROTOCOLS>
    # Preparing the Template
    <Add mover="removeNonProtein" />
    <Add mover="saveTemplate" />
    <Add mover="removeExtraChains" />
    <Add mover="FragmentPicker" />
    <Add mover="addCST" />
    # Fold
    <Add mover="FFL" />
    <Add mover="dump" />
    # Design
    <Add mover="cleanCST" />
    <Add mover="DesignRelax" />
    <Add mover="FFLCCD" />
    # Evaluate
    <Add filter="final_rmsd" />
    <Add mover="pymolselect" />
  </PROTOCOLS>
  <OUTPUT />
</ROSETTASCRIPTS>
